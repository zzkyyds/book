资料:
https://cloud.tencent.com/developer/article/2109926
https://www.cnblogs.com/shoshana-kong/p/10682662.html
https://segmentfault.com/a/1190000011404088

webxml流程图:
https://www.processon.com/view/567b6151e4b0f7832d324417
https://blog.csdn.net/weixin_51773993/article/details/129751457

#重要:
1.
以上都是在WEB项目还没有完全启动起来的时候就已经完成了的工作。
如果系统中有Servlet，则Servlet是在第一次发起请求的时候被实例化的，而且一般不会被容器销毁，它可以服务于多个用户的请求。
所以，Servlet的初始化都要比上面提到的那几个要迟。
总的来说，web.xml的加载顺序是: <context-param>-> <listener> -> <filter> -> <servlet>。
其中，如果web.xml中出现了相同的元素，则按照在配置文件中出现的先后顺序来加载。
配置Spring，必须需要<listener>，而<context-param>可有可无，如果在web.xml中不写<context-param>配置信息，默认的路径是/WEB-INF/applicationContext.xml

2.
Servlet的生命周期
创建Servlet实例有两个时机：
客户端第一次请求某个Servlet时，系统创建该Servlet的实例，大部分Servlet都是这种Servlet；
web应用启动时立即创建Servlet实例，即<load-on-start>1</laod-on-start>

3.web.xml 元素
webAppRootKey:配置在同一个容器中的多个web项目，要配置不同的webAppRootKey，web.xml文件中最好定义webAppRootKey参数，如果不定义，将会缺省为“webapp.root”，为防止log4j配置冲突，每个项目配置不同的webAppRootKey。
当然也不能重复，否则报类似下面的错误


4.listener
https://blog.csdn.net/qq_51938362/article/details/125744243
监听器可以监听在application，Session，Request三个对象创建、销毁或者往其中添加修改删除属性时自动执行代码的功能组件。
已有的listener:ServletContext监听(2个),Session监听(4个),Request监听(2个)
(session钝化活化)


5.filter
https://blog.csdn.net/yuzhiqiang_1993/article/details/81288912
过滤器实际上就是对web资源进行拦截，做一些处理后再交给下一个过滤器或servlet处理
通常都是用来拦截request进行处理的，也可以对返回的response进行拦截处理
职责链,doFilter
过滤器是在服务器启动时就会创建的，只会创建一个实例









